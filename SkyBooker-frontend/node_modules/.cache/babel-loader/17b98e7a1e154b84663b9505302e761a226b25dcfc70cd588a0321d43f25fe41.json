{"ast":null,"code":"// When running in Docker, we need to use the gateway container name instead of localhost\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://gateway:80/api\";\nexport const getFlights = async () => {\n  // Get token from localStorage if available\n  const token = localStorage.getItem('token');\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  // Add authorization header if token exists\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  const response = await fetch(`${API_BASE}/flight`, {\n    headers\n  });\n  if (!response.ok) throw new Error(\"Error fetching flights\");\n  return response.json();\n};\nexport const getFlightById = async id => {\n  // Get token from localStorage if available\n  const token = localStorage.getItem('token');\n  const headers = {\n    \"Content-Type\": \"application/json\"\n  };\n\n  // Add authorization header if token exists\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  const response = await fetch(`${API_BASE}/flight/${id}`, {\n    headers\n  });\n  if (!response.ok) throw new Error(\"Error fetching flight\");\n  return response.json();\n};\nexport const createFlight = async (flightData, token) => {\n  const response = await fetch(`${API_BASE}/flight`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n    body: JSON.stringify(flightData)\n  });\n  if (!response.ok) throw new Error(\"Error creating flight\");\n  return response.json();\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","getFlights","token","localStorage","getItem","headers","response","fetch","ok","Error","json","getFlightById","id","createFlight","flightData","method","body","JSON","stringify"],"sources":["C:/Users/erzincansivas/Documents/Modul321/SkyBooker/SkyBooker-frontend/src/services/flightService.js"],"sourcesContent":["// When running in Docker, we need to use the gateway container name instead of localhost\r\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://gateway:80/api\";\r\n\r\nexport const getFlights = async () => {\r\n  // Get token from localStorage if available\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const headers = {\r\n    \"Content-Type\": \"application/json\"\r\n  };\r\n  \r\n  // Add authorization header if token exists\r\n  if (token) {\r\n    headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n  \r\n  const response = await fetch(`${API_BASE}/flight`, {\r\n    headers\r\n  });\r\n  \r\n  if (!response.ok) throw new Error(\"Error fetching flights\");\r\n  return response.json();\r\n};\r\n\r\nexport const getFlightById = async (id) => {\r\n  // Get token from localStorage if available\r\n  const token = localStorage.getItem('token');\r\n  \r\n  const headers = {\r\n    \"Content-Type\": \"application/json\"\r\n  };\r\n  \r\n  // Add authorization header if token exists\r\n  if (token) {\r\n    headers[\"Authorization\"] = `Bearer ${token}`;\r\n  }\r\n  \r\n  const response = await fetch(`${API_BASE}/flight/${id}`, {\r\n    headers\r\n  });\r\n  \r\n  if (!response.ok) throw new Error(\"Error fetching flight\");\r\n  return response.json();\r\n};\r\n\r\nexport const createFlight = async (flightData, token) => {\r\n  const response = await fetch(`${API_BASE}/flight`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${token}`\r\n    },\r\n    body: JSON.stringify(flightData)\r\n  });\r\n  if (!response.ok) throw new Error(\"Error creating flight\");\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEzE,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;;EAED;EACA,IAAIH,KAAK,EAAE;IACTG,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EAC9C;EAEA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,SAAS,EAAE;IACjDQ;EACF,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC3D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC;EACA,MAAMV,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;;EAED;EACA,IAAIH,KAAK,EAAE;IACTG,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUH,KAAK,EAAE;EAC9C;EAEA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,WAAWe,EAAE,EAAE,EAAE;IACvDP;EACF,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAOC,UAAU,EAAEZ,KAAK,KAAK;EACvD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGV,QAAQ,SAAS,EAAE;IACjDkB,MAAM,EAAE,MAAM;IACdV,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUH,KAAK;IAClC,CAAC;IACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;EACjC,CAAC,CAAC;EACF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}