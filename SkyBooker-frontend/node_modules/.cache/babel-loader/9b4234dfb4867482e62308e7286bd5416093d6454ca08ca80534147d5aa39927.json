{"ast":null,"code":"// When running in Docker, we need to use the gateway container name instead of localhost\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://gateway:80/api\";\nexport const loginUser = async (username, password) => {\n  const response = await fetch(`${API_BASE}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  if (!response.ok) throw new Error(\"Login failed\");\n  return response.json();\n};\nexport const registerUser = async (username, email, password) => {\n  const response = await fetch(`${API_BASE}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password\n    })\n  });\n  if (!response.ok) throw new Error(\"Registration failed\");\n  return response.json();\n};","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","loginUser","username","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","registerUser","email"],"sources":["C:/Users/erzincansivas/Documents/Modul321/SkyBooker/SkyBooker-frontend/src/services/authService.js"],"sourcesContent":["// When running in Docker, we need to use the gateway container name instead of localhost\r\nconst API_BASE = process.env.REACT_APP_API_URL || \"http://gateway:80/api\";\r\n\r\nexport const loginUser = async (username, password) => {\r\n  const response = await fetch(`${API_BASE}/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ username, password })\r\n  });\r\n  if (!response.ok) throw new Error(\"Login failed\");\r\n  return response.json();\r\n};\r\n\r\nexport const registerUser = async (username, email, password) => {\r\n  const response = await fetch(`${API_BASE}/register`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ username, email, password })\r\n  });\r\n  if (!response.ok) throw new Error(\"Registration failed\");\r\n  return response.json();\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAEzE,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,QAAQ,EAAE;IAChDS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjD,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOZ,QAAQ,EAAEa,KAAK,EAAEZ,QAAQ,KAAK;EAC/D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,QAAQ,WAAW,EAAE;IACnDS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,QAAQ;MAAEa,KAAK;MAAEZ;IAAS,CAAC;EACpD,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxD,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}